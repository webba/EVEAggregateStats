/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * OpenAPI spec version: 0.7.5
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

import { GetCharactersCharacterIdWalletJournalExtraInfo } from './getCharactersCharacterIdWalletJournalExtraInfo';


/**
 * 200 ok object
 */
export interface GetCharactersCharacterIdWalletJournal200Ok {
    /**
     * Date and time of transaction
     */
    date: Date;

    /**
     * Unique journal reference ID
     */
    refId: number;

    /**
     * Transaction type, different type of transaction will populate different fields in `extra_info` Note: If you have an existing XML API application that is using ref_types, you will need to know which string ESI ref_type maps to which integer. You can use the following gist to see string->int mappings: https://gist.github.com/ccp-zoetrope/c03db66d90c2148724c06171bc52e0ec
     */
    refType: GetCharactersCharacterIdWalletJournal200Ok.RefTypeEnum;

    /**
     * first_party_id integer
     */
    firstPartyId?: number;

    /**
     * first_party_type string
     */
    firstPartyType?: GetCharactersCharacterIdWalletJournal200Ok.FirstPartyTypeEnum;

    /**
     * second_party_id integer
     */
    secondPartyId?: number;

    /**
     * second_party_type string
     */
    secondPartyType?: GetCharactersCharacterIdWalletJournal200Ok.SecondPartyTypeEnum;

    /**
     * Transaction amount. Positive when value transferred to the first party. Negative otherwise
     */
    amount?: number;

    /**
     * Wallet balance after transaction occurred
     */
    balance?: number;

    /**
     * reason string
     */
    reason?: string;

    /**
     * the corporation ID receiving any tax paid
     */
    taxReceiverId?: number;

    /**
     * Tax amount received for tax related transactions
     */
    tax?: number;

    extraInfo?: GetCharactersCharacterIdWalletJournalExtraInfo;

}
export namespace GetCharactersCharacterIdWalletJournal200Ok {
    export enum RefTypeEnum {
        AccelerationGateFee = <any> 'acceleration_gate_fee',
        AdvertisementListingFee = <any> 'advertisement_listing_fee',
        AgentDonation = <any> 'agent_donation',
        AgentLocationServices = <any> 'agent_location_services',
        AgentMiscellaneous = <any> 'agent_miscellaneous',
        AgentMissionCollateralPaid = <any> 'agent_mission_collateral_paid',
        AgentMissionCollateralRefunded = <any> 'agent_mission_collateral_refunded',
        AgentMissionReward = <any> 'agent_mission_reward',
        AgentMissionRewardCorporationTax = <any> 'agent_mission_reward_corporation_tax',
        AgentMissionTimeBonusReward = <any> 'agent_mission_time_bonus_reward',
        AgentMissionTimeBonusRewardCorporationTax = <any> 'agent_mission_time_bonus_reward_corporation_tax',
        AgentSecurityServices = <any> 'agent_security_services',
        AgentServicesRendered = <any> 'agent_services_rendered',
        AgentsPreward = <any> 'agents_preward',
        AllianceMaintainanceFee = <any> 'alliance_maintainance_fee',
        AllianceRegistrationFee = <any> 'alliance_registration_fee',
        AssetSafetyRecoveryTax = <any> 'asset_safety_recovery_tax',
        Bounty = <any> 'bounty',
        BountyPrize = <any> 'bounty_prize',
        BountyPrizeCorporationTax = <any> 'bounty_prize_corporation_tax',
        BountyPrizes = <any> 'bounty_prizes',
        BountyReimbursement = <any> 'bounty_reimbursement',
        BountySurcharge = <any> 'bounty_surcharge',
        BrokersFee = <any> 'brokers_fee',
        CloneActivation = <any> 'clone_activation',
        CloneTransfer = <any> 'clone_transfer',
        ContrabandFine = <any> 'contraband_fine',
        ContractAuctionBid = <any> 'contract_auction_bid',
        ContractAuctionBidCorp = <any> 'contract_auction_bid_corp',
        ContractAuctionBidRefund = <any> 'contract_auction_bid_refund',
        ContractAuctionSold = <any> 'contract_auction_sold',
        ContractBrokersFee = <any> 'contract_brokers_fee',
        ContractBrokersFeeCorp = <any> 'contract_brokers_fee_corp',
        ContractCollateral = <any> 'contract_collateral',
        ContractCollateralDepositedCorp = <any> 'contract_collateral_deposited_corp',
        ContractCollateralPayout = <any> 'contract_collateral_payout',
        ContractCollateralRefund = <any> 'contract_collateral_refund',
        ContractDeposit = <any> 'contract_deposit',
        ContractDepositCorp = <any> 'contract_deposit_corp',
        ContractDepositRefund = <any> 'contract_deposit_refund',
        ContractDepositSalesTax = <any> 'contract_deposit_sales_tax',
        ContractPrice = <any> 'contract_price',
        ContractPricePaymentCorp = <any> 'contract_price_payment_corp',
        ContractReversal = <any> 'contract_reversal',
        ContractReward = <any> 'contract_reward',
        ContractRewardDeposited = <any> 'contract_reward_deposited',
        ContractRewardDepositedCorp = <any> 'contract_reward_deposited_corp',
        ContractRewardRefund = <any> 'contract_reward_refund',
        ContractSalesTax = <any> 'contract_sales_tax',
        Copying = <any> 'copying',
        CorporateRewardPayout = <any> 'corporate_reward_payout',
        CorporateRewardTax = <any> 'corporate_reward_tax',
        CorporationAccountWithdrawal = <any> 'corporation_account_withdrawal',
        CorporationBulkPayment = <any> 'corporation_bulk_payment',
        CorporationDividendPayment = <any> 'corporation_dividend_payment',
        CorporationLiquidation = <any> 'corporation_liquidation',
        CorporationLogoChangeCost = <any> 'corporation_logo_change_cost',
        CorporationPayment = <any> 'corporation_payment',
        CorporationRegistrationFee = <any> 'corporation_registration_fee',
        CourierMissionEscrow = <any> 'courier_mission_escrow',
        Cspa = <any> 'cspa',
        Cspaofflinerefund = <any> 'cspaofflinerefund',
        DatacoreFee = <any> 'datacore_fee',
        DnaModificationFee = <any> 'dna_modification_fee',
        DockingFee = <any> 'docking_fee',
        DuelWagerEscrow = <any> 'duel_wager_escrow',
        DuelWagerPayment = <any> 'duel_wager_payment',
        DuelWagerRefund = <any> 'duel_wager_refund',
        FactorySlotRentalFee = <any> 'factory_slot_rental_fee',
        GmCashTransfer = <any> 'gm_cash_transfer',
        IndustryJobTax = <any> 'industry_job_tax',
        InfrastructureHubMaintenance = <any> 'infrastructure_hub_maintenance',
        Inheritance = <any> 'inheritance',
        Insurance = <any> 'insurance',
        JumpCloneActivationFee = <any> 'jump_clone_activation_fee',
        JumpCloneInstallationFee = <any> 'jump_clone_installation_fee',
        KillRightFee = <any> 'kill_right_fee',
        LpStore = <any> 'lp_store',
        Manufacturing = <any> 'manufacturing',
        MarketEscrow = <any> 'market_escrow',
        MarketFinePaid = <any> 'market_fine_paid',
        MarketTransaction = <any> 'market_transaction',
        MedalCreation = <any> 'medal_creation',
        MedalIssued = <any> 'medal_issued',
        MissionCompletion = <any> 'mission_completion',
        MissionCost = <any> 'mission_cost',
        MissionExpiration = <any> 'mission_expiration',
        MissionReward = <any> 'mission_reward',
        OfficeRentalFee = <any> 'office_rental_fee',
        OperationBonus = <any> 'operation_bonus',
        OpportunityReward = <any> 'opportunity_reward',
        PlanetaryConstruction = <any> 'planetary_construction',
        PlanetaryExportTax = <any> 'planetary_export_tax',
        PlanetaryImportTax = <any> 'planetary_import_tax',
        PlayerDonation = <any> 'player_donation',
        PlayerTrading = <any> 'player_trading',
        ProjectDiscoveryReward = <any> 'project_discovery_reward',
        ProjectDiscoveryTax = <any> 'project_discovery_tax',
        Reaction = <any> 'reaction',
        ReleaseOfImpoundedProperty = <any> 'release_of_impounded_property',
        RepairBill = <any> 'repair_bill',
        ReprocessingTax = <any> 'reprocessing_tax',
        ResearchingMaterialProductivity = <any> 'researching_material_productivity',
        ResearchingTechnology = <any> 'researching_technology',
        ResearchingTimeProductivity = <any> 'researching_time_productivity',
        ResourceWarsReward = <any> 'resource_wars_reward',
        ReverseEngineering = <any> 'reverse_engineering',
        SecurityProcessingFee = <any> 'security_processing_fee',
        Shares = <any> 'shares',
        SovereignityBill = <any> 'sovereignity_bill',
        StorePurchase = <any> 'store_purchase',
        StorePurchaseRefund = <any> 'store_purchase_refund',
        TransactionTax = <any> 'transaction_tax',
        UpkeepAdjustmentFee = <any> 'upkeep_adjustment_fee',
        WarAllyContract = <any> 'war_ally_contract',
        WarFee = <any> 'war_fee',
        WarFeeSurrender = <any> 'war_fee_surrender'
    }
    export enum FirstPartyTypeEnum {
        Character = <any> 'character',
        Corporation = <any> 'corporation',
        Alliance = <any> 'alliance',
        Faction = <any> 'faction',
        System = <any> 'system'
    }
    export enum SecondPartyTypeEnum {
        Character = <any> 'character',
        Corporation = <any> 'corporation',
        Alliance = <any> 'alliance',
        Faction = <any> 'faction',
        System = <any> 'system'
    }
}
